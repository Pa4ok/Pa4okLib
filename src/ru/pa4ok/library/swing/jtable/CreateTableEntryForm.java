package ru.pa4ok.library.swing.jtable;

import ru.pa4ok.library.swing.DialogUtil;

import javax.swing.JOptionPane;
import javax.swing.UIManager;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;

public class CreateTableEntryForm
{
    private static final String defaultInputTitle = UIManager.getString("OptionPane.inputDialogTitle", null);
    private static final String defaultCancelButtonText = UIManager.getString("OptionPane.cancelButtonText", null);
    private static final String defaultOkButtonText = UIManager.getString("OptionPane.okButtonText", null);

    public static String[] createTableEntryData(Component parentComponent, List<EditableTableHeader> tableHeadersIn)
    {
        List<EditableTableHeader> tableHeaders = new ArrayList<>(tableHeadersIn);

        for(int i=tableHeaders.size()-1; i>=0; i--) {
            if(tableHeaders.get(i).isAutoGenerated()) {
                tableHeaders.remove(i);
            }
        }
        if(tableHeaders.isEmpty()) {
            return null;
        }

        String[] entryData = new String[tableHeaders.size()];

        for(int i=0; i<tableHeaders.size(); i++)
        {
            EditableTableHeader header = tableHeaders.get(i);

            String result = "";
            while(true)
            {
                changeInputTexts(i, tableHeaders.size());
                result = JOptionPane.showInputDialog(
                        parentComponent,
                        "Введите значение поля '" + header.getHeader() + "'",
                        result);
                returnDefaultInputTexts();

                if(result == null) {
                    return null;
                }

                if(header.getFilter().filter(result)) {
                    entryData[i] = result;
                    break;
                }
                DialogUtil.showError(parentComponent, "Значение поля введено неверно!");
            }
        }

        return entryData;
    }

    public static String[] createTableEntryData(List<EditableTableHeader> tableHeadersIn)
    {
        return createTableEntryData(null, tableHeadersIn);
    }

    private static void changeInputTexts(int i, int maxI)
    {
        UIManager.put("OptionPane.inputDialogTitle", " Добавление записи");
        if(i == maxI-1) {
            UIManager.put("OptionPane.cancelButtonText", "Отменить добавление");
            UIManager.put("OptionPane.okButtonText", "Завершить добавление");
        } else {
            UIManager.put("OptionPane.cancelButtonText", "Отменить добавление");
            UIManager.put("OptionPane.okButtonText", "Продолжить");
        }
    }

    private static void returnDefaultInputTexts()
    {
        UIManager.put("OptionPane.inputDialogTitle", defaultInputTitle);
        UIManager.put("OptionPane.cancelButtonText", defaultCancelButtonText);
        UIManager.put("OptionPane.okButtonText", defaultOkButtonText);
    }
}